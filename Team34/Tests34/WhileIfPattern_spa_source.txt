procedure a1 {
	a = a + b + 1;
	if (b / c != c % d) then {
		d = d + d;
	} else {
		e = e + e;
	}

	while ((a/b == 3) || ((b/c == 3) && (c/d % 4 * 3 == 5))) {
		while ((a/b == 3) || ((b/c == 3) && (c/d % 4 * 3 == 5))) {
			if (f + f == g) then {
				g = g + g;
			} else {
				h = h + h;
			}
		}
		i = i + i;
	}

	read x;
	read y;

	if (3 == 3) then {
		j = j + 1;
	} else {
		h = 1;
	}
}

procedure a2 {
	if ((a/b == 3) || (b/c == 3)) then {
		if ((e == 3) || (f == 3)) then {
			if ((h == 3) || (i == 3)) then {
				h = h + i;
			} else {
				i = i + h;
			}
		} else {
			if ((a/b == 3) || ((b/c == 3) && (c/d % 4 * 3 == 5))) then {
				a = a + b;
			} else {
				b = b + c;
			}
		}
	} else {
		if ((a/b == 3) || (b/c == 3)) then {
			if ((h == 3) || (i == 3)) then {
				h = h + i;
			} else {
				i = i + h;
			}
		} else {
			if ((a/b == 3) || ((b/c == 3) && (c/d % 4 * 3 == 5))) then {
				a = a + b;
			} else {
				b = b + c;
			}
		}
	}

	while ((z == y + x + w) || ((v + u == t) || (s == 1))) {
		while ((b/c == 3) && (c/d % 4 * 3 == 5)) {
			while ((z == y + x + w) || ((v + u == t) || (s == 1))) {
				while ((b/c == 3) && (c/d % 4 * 3 == 5)) {
					while ((z == y + x + w) || ((v + u == t) || (s == 1))) {
						while ((b/c == 3) && (c/d % 4 * 3 == 5)) {
							while ((z == y + x + w) || ((v + u == t) || (s == 1))) {
								z = y + x + w + v + u + s;
							}
						}
					}
				}
			}
		}
	}
	read x;
	read y;
}

procedure a3 {
	if ((1/2 == 3) || ((3/4 == 3) && (4/5 % 4 * 3 == 5))) then {
		if ((3 == 3) || (3 == 3)) then {
			if ((3 == 3) || (3 == 3)) then {
				h = h + i;
			} else {
				i = i + h;
			}
		} else {
			if ((1/2 == 3) || ((3/4 == 3) && (4/5 % 4 * 3 == 5))) then {
				a = a + b;
			} else {
				b = b + c;
			}
		}
	} else {
		if ((3 == 3) || (3 == 3)) then {
			if ((3 == 3) || (3 == 3)) then {
				h = h + i;
			} else {
				i = i + h;
			}
		} else {
			if ((1/2 == 3) || ((3/4 == 3) && (4/5 % 4 * 3 == 5))) then {
				a = a + b;
			} else {
				while(n == 2) {
					b = b + c;
				}
			}
		}
	}

	while ((1 == 2 + 3 + 4) || ((5 + 6 == 7) || (5 == 1))) {
		while ((1 == 2 + 3 + 4) || ((5 + 6 == 7) || (5 == 1))) {
			while ((1 == 2 + 3 + 4) || ((5 + 6 == 7) || (5 == 1))) {
				if (n == 2) then {
					a = 1 + 2 + 3 + 4 + 5 + 6 + 7;
				} else {
					a = 1 + 2 + 3 + 4 + 5 + 6 + 7;
				}
			}
		}
	}
}