1 - Double Relation - and - Single same Synonym
assign a; while w; if ifs;
Select a such that Parent(w, a) and Follows(a, ifs)
5
5000
2 - Double Relation - and - Double same Synonym
assign a; while w; if ifs;
Select a such that Parent(w, a) and Next(w, a)
5, 25, 27
5000
3 - Double Relation - such that - Single same Synonym
assign a; variable v, v1;
Select a such that Modifies(a, v) such that Uses(a, v1)
2, 3, 5, 7, 8, 10, 14, 15, 16, 17, 19, 20, 25, 27, 28, 29, 30, 31, 32
5000
4 - Double Relation - such that - Double same Synonym
assign a; variable v, v1;
Select a such that Modifies(a, v) such that Uses(a, v)
8, 10, 14, 15, 16, 17, 28, 29, 30, 31
5000
5 - Multi Relation and Pattern - Next Parent pattern if pattern while
stmt s; if ifs; while w;
Select s such that Next(s, ifs) and Parent(w, ifs) pattern ifs("x", _, _) pattern w("lad", _)
5
5000
6 - Multi Relation - Next Parent 
stmt s; if ifs; while w;
Select s such that Next(s, ifs) and Parent(w, ifs)
5, 12
5000
7 - Multi Relation - Next Next 
stmt s; assign a; while w;
Select a such that Next(a, w) and Next(w, s)
3, 7, 15, 17, 25, 29, 31
5000
8 - Multi Relation and Pattern - Next Next pattern while
stmt s; assign a; while w; variable v;
Select a such that Next(a, w) and Next(w, s) pattern w (v, _)
3, 7, 31
5000
9 - Multi Relation and Pattern - Next Next pattern while
stmt s; assign a; while w; variable v;
Select a such that Next(a, w) and Next(w, s) pattern w (v, _)
3, 7, 31
5000
10 - Multi Relation and Pattern - pattern assign uses modifies 1
assign a; variable v;
Select a such that Modifies(a, v) and Uses(a, v) pattern a (v, _)
8, 10, 14, 15, 16, 17, 28, 29, 30, 31
5000
11 - Multi Relation and Pattern - pattern assign uses modifies 2
assign a; variable v, v1;
Select a such that Modifies(a, v) and Uses(a, v1) pattern a (_, _"x + z"_)
14, 15, 19
5000
12 - Multi Relation and Pattern - pattern assign uses modifies 3
assign a; variable v, v1;
Select a such that Modifies(a, v) and Uses(a, v1) pattern a (_, _"y"_)
3, 5, 7, 8, 10, 15, 16, 17, 20, 27, 29, 30
5000
13 - Multi Relation - container stmt with containers
stmt s, s1, s2;
Select s such that Parent(s, s1) and Parent(s1, s2)
4, 12, 24
5000
14 - Multi Relation - container stmt with containers with containers
stmt s, s1, s2, s3;
Select s such that Parent(s, s1) and Parent(s1, s2) and Parent(s2, s3)
none
5000
15 - Multi Relation - cross product chain
stmt s, s1, s2, s3;
Select s such that Next(s, s1) and Next*(s2, s3)
1, 2, 3, 4, 5, 6, 7, 8 , 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32
5000
16 - Multi Relation - cross product chain + filter
stmt s, s1, s2, s3;
Select s such that Next(s, s1) and Next*(s2, s3) such that Modifies(s, "lad")
1, 3, 4, 6, 7, 9, 12, 13, 15, 18, 19, 24, 31
5000
17 - Multi Relation - cross product chain + more filter
stmt s, s1, s2, s3, s4;
Select s such that Next(s, s1) and Next*(s2, s3) such that Modifies(s, "lad") and Parent(s, s4)
4, 6, 12, 13, 18, 24
5000
18 - Multi Relation - cross product chain + even more filter
stmt s, s1, s2, s3, s4, s5;
Select s such that Next(s, s1) and Next*(s2, s3) such that Modifies(s, "lad") and Parent(s, s4) with s.stmt# = 12
12
5000
19 - Multi Relation - Calls with - Select attribute
call cl; procedure p, p1;
Select cl.procName such that Calls(p, p1) with p.procName = cl.procName
find
5000
20 - Multi Relation - Calls with - Select callstmt
call cl; procedure p, p1;
Select cl such that Calls(p, p1) with p.procName = cl.procName
1, 9
5000